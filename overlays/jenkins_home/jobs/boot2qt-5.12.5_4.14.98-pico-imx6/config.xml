<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build Boot2Qt PICO-IMX6&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>3</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>3</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.copyartifact.CopyArtifactPermissionProperty plugin="copyartifact@1.39.1">
      <projectNameList>
        <string>*</string>
      </projectNameList>
    </hudson.plugins.copyartifact.CopyArtifactPermissionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.6.4">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/TechNexion-customization/meta-boot2qt.git</url>
        <credentialsId>tn-jenkins</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/sumo-tn-boot2qt-5.12.5-wip</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>B2QT</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <assignedNode>docker-slave/yocto-builder</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H H * * 7</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>data/${JOB_NAME}</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x -e

cat &gt; site.conf &lt;&lt;EOF
# u-boot-edm.bb
#SRCSERVER_pn-u-boot-edm = &quot;git://10.20.30.20/volume1/internal_git/edm/uboot-imx-edm.git&quot;
#SRCBRANCH_pn-u-boot-edm = &quot;tn-imx_v2018.03_4.14.98_2.0.0_ga-wip-bootscript&quot;
#SRCOPTIONS_pn-u-boot-edm = &quot;;protocol=ssh;user=rdsw&quot;
#SRCREV_pn-u-boot-edm = &quot;8b3c9edbead4fcc888db9624cdf0445d19c704aa&quot;

# u-boot-script.bb
#SRCSERVER_pn-u-boot-script = &quot;git://10.20.30.20/volume1/internal_git/edm/uboot-imx-edm.git&quot;
#SRCOPTIONS_pn-u-boot-script = &quot;;protocol=ssh;user=rdsw&quot;

# linux-firmware-brcm-tn.bb
SRCSERVER_pn-linux-firmware-brcm-tn = &quot;git://10.20.30.20/volume1/internal_git/edm/brcm_firmware.git&quot;
SRCBRANCH_pn-linux-firmware-brcm-tn = &quot;master&quot;
SRCOPTIONS_pn-linux-firmware-brcm-tn = &quot;;protocol=ssh;user=rdsw&quot;
SRCREV_pn-linux-firmware-brcm-tn = &quot;\${AUTOREV}&quot;
SRC_URI_pn-linux-firmware-brcm-tn = &quot;\${SRCSERVER};branch=\${SRCBRANCH}\${SRCOPTIONS}&quot;
S_pn-linux-firmware-brcm-tn = &quot;\${WORKDIR}/git&quot;

# linux-firmware-qca-tn.bb
SRCSERVER_pn-linux-firmware-qca-tn = &quot;git://10.20.30.20/volume1/internal_git/edm/qca_firmware.git&quot;
SRCBRANCH_pn-linux-firmware-qca-tn = &quot;caf-wlan/CNSS.LEA.NRT_3.0&quot;
SRCOPTIONS_pn-linux-firmware-qca-tn = &quot;;protocol=ssh;user=rdsw&quot;
SRCREV_pn-linux-firmware-qca-tn = &quot;\${AUTOREV}&quot;
SRC_URI_pn-linux-firmware-qca-tn = &quot;\${SRCSERVER};branch=\${SRCBRANCH}\${SRCOPTIONS}&quot;
S_pn-linux-firmware-qca-tn = &quot;\${WORKDIR}/git&quot;

# linux-tn-imx.bb
#KERNEL_SRC_pn-linux-tn-imx = &quot;git://10.20.30.20:/volume1/internal_git/edm/tn-kernel.git&quot;
#SRCBRANCH_pn-linux-tn-imx = &quot;tn-imx_4.14.98_2.0.0_ga-wip-sdmafix&quot;
#SRCOPTIONS_pn-linux-tn-imx = &quot;;protocol=ssh;user=rdsw&quot;
#SRCREV_pn-linux-tn-imx = &quot;5b97eae48fd356d280815cb6088eff79570735f9&quot;
#SRC_URI_pn-linux-tn-imx = &quot;\${KERNEL_SRC};branch=\${SRCBRANCH}\${SRCOPTIONS}&quot;
EOF
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x

set -e

OUTDIR=/home/jenkins/build/boot2qt-images
CACHEDIR=/home/jenkins/data/src/boot2qt/cache
DLDIR=/home/jenkins/data/src/boot2qt/downloads
SSTATEDIR=/home/jenkins/data/src/boot2qt/sstate-cache

# clear and make download/sstate-cache/ccache folder on external volume
[ -L cache ] &amp;&amp; rm -f cache
[ -d ${CACHEDIR} ] &amp;&amp; ln -s ${CACHEDIR} cache
[ -L downloads ] &amp;&amp; rm -f downloads
[ -d ${DLDIR} ] &amp;&amp; ln -s ${DLDIR} downloads
[ -L sstate-cache ] &amp;&amp; rm -f sstate-cache
[ -d ${SSTATEDIR} ] &amp;&amp; ln -s ${SSTATEDIR} sstate-cache
[ -d ${WORKSPACE}/sources/meta-edm-bsp-release ] &amp;&amp; rm -fR ${WORKSPACE}/sources/meta-edm-bsp-release

GITSERVER=&quot;10.20.30.20&quot;
chmod 0600 ~/.ssh/id_rsa
ssh-keyscan ${GITSERVER} &gt;&gt; ~/.ssh/known_hosts
./B2QT/b2qt-init-build-env init --device pico-imx6

export MACHINE=pico-imx6
source setup-environment.sh

# setup uEnv.txt parameters
export BASE_BOARD=&quot;pi&quot; # dwarf, nymph, hobbit
export RF_FIRMWARES=&quot;qca&quot; # brcm ath-pci, all
export DISPLAY_INFO=&quot;lcd&quot; # lvds7 lvds10 lvds15 hdmi720p hdmi1080p lvds7_hdmi720p custom
export BB_ENV_EXTRAWHITE=&quot;$BB_ENV_EXTRAWHITE BASE_BOARD DISPLAY_INFO RF_FIRMWARES&quot;
export

# Copy the site.conf for overriding QCA firmware downloads
cp ${WORKSPACE}/site.conf ./conf/site.conf
cat ./conf/site.conf

# copy new EULA
echo ===== Copy EULA =====
cp ../sources/meta-fsl-bsp-release/imx/EULA.txt ../sources/meta-freescale/EULA

#bitbake b2qt-embedded-qt5-image
bitbake meta-b2qt-embedded-qbsp

cp -r ./tmp/deploy/images/* ${OUTDIR}

# for rescue server
mkdir -p $WORKSPACE/$MACHINE/$BASE_BOARD-lcd800x480/
cp ./tmp/deploy/images/$MACHINE/b2qt-embedded-qt5-image-$MACHINE.sdcard.xz $WORKSPACE/$MACHINE/$BASE_BOARD-lcd800x480/boot2qt-5.12.xz
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build-*/tmp/deploy/images/*/*.wic,build-*/tmp/deploy/images/*/*.xz,build-*/tmp/deploy/sdk/*,build-*/tmp/deploy/qbsp/*,*imx*/*-*/*.xz</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>true</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <jenkins.plugins.publish__over__ftp.BapFtpPublisherPlugin plugin="publish-over-ftp@1.15">
      <consolePrefix>FTP: </consolePrefix>
      <delegate plugin="publish-over@0.22">
        <publishers>
          <jenkins.plugins.publish__over__ftp.BapFtpPublisher plugin="publish-over-ftp@1.15">
            <configName>Rescue FTP</configName>
            <verbose>false</verbose>
            <transfers>
              <jenkins.plugins.publish__over__ftp.BapFtpTransfer>
                <remoteDirectory>/</remoteDirectory>
                <sourceFiles>*imx*/*-*/boot2qt-5.12.xz</sourceFiles>
                <excludes></excludes>
                <removePrefix></removePrefix>
                <remoteDirectorySDF>false</remoteDirectorySDF>
                <flatten>false</flatten>
                <cleanRemote>false</cleanRemote>
                <noDefaultExcludes>false</noDefaultExcludes>
                <makeEmptyDirs>false</makeEmptyDirs>
                <patternSeparator>[, ]+</patternSeparator>
                <asciiMode>false</asciiMode>
              </jenkins.plugins.publish__over__ftp.BapFtpTransfer>
            </transfers>
            <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
            <usePromotionTimestamp>false</usePromotionTimestamp>
          </jenkins.plugins.publish__over__ftp.BapFtpPublisher>
        </publishers>
        <continueOnError>false</continueOnError>
        <failOnError>false</failOnError>
        <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
        <hostConfigurationAccess class="jenkins.plugins.publish_over_ftp.BapFtpPublisherPlugin" reference="../.."/>
      </delegate>
    </jenkins.plugins.publish__over__ftp.BapFtpPublisherPlugin>
    <hudson.tasks.Mailer plugin="mailer@1.20">
      <recipients>Po Cheng &lt;po.cheng@technexion.com&gt;</recipients>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>