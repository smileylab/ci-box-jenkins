<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>10</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>docker-slave/android-9</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

apt update
echo &quot;y&quot; | apt install libssl-dev

TOP=&quot;${PWD}&quot;
CROSS_PATH=&quot;${PWD}/toolchain/bin&quot;
PATH_UBOOT=&quot;${PWD}/u-boot&quot;
PATH_KERNEL=&quot;${PWD}/linux&quot;

export PATH=&quot;${PATH_UBOOT}/tools:$CROSS_PATH:${PATH}&quot;
export ARCH=arm
export CROSS_COMPILE=arm-linux-gnueabihf-

# download u-boot
git clone https://github.com/u-boot/u-boot.git -b master --depth=1
# download kernel
git clone https://github.com/torvalds/linux.git -b master --depth=1


# download 32-bit toolchain
wget -c -t 0 --timeout=60 --waitretry=60 https://releases.linaro.org/components/toolchain/binaries/latest-7/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-i686_arm-linux-gnueabihf.tar.xz
tar Jxvf gcc-linaro-7.5.0-2019.12-i686_arm-linux-gnueabihf.tar.xz
mv gcc-linaro-7.5.0-2019.12-i686_arm-linux-gnueabihf toolchain


# build pico-imx6ul
cd &quot;$PATH_UBOOT&quot;
echo &quot;===============================PICO-IMX6UL GO=====================================&quot;
make pico-imx6ul_defconfig
make -j10
WARNING_MSG=&quot;$(make -j10 | grep &quot;===================== WARNING ======================&quot;)&quot;
make clean
make distclean
echo &quot;===============================PICO-IMX7D GO=====================================&quot;
make pico-imx7d_defconfig
make -j10
WARNING_MSG=&quot;$(make -j10 | grep &quot;===================== WARNING ======================&quot;)&quot;
make clean
make distclean
echo &quot;===============================PICO-IMX6 GO=====================================&quot;
make pico-imx6_defconfig
make -j10
WARNING_MSG=&quot;$(make -j10 | grep &quot;===================== WARNING ======================&quot;)&quot;
make clean
make distclean


cd &quot;$TOP&quot;
cd &quot;$PATH_KERNEL&quot;
make imx_v6_v7_defconfig
make -j10
WARNING_MSG=&quot;$(make -j10 | grep &quot;===================== WARNING ======================&quot;)&quot;

cd &quot;$TOP&quot;




# build pico-imx7d


# download 62-bit toolchain
#wget -c -t 0 --timeout=60 --waitretry=60 </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.zip</artifacts>
      <allowEmptyArchive>true</allowEmptyArchive>
      <onlyIfSuccessful>true</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.20">
      <recipients>Wig Cheng&lt;wig.cheng@technexion.com&gt;</recipients>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.34">
      <patterns class="empty-list"/>
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>false</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>true</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>