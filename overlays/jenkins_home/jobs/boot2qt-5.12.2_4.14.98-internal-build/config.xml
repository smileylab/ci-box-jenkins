<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build Boot2Qt from internal repository&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>3</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>3</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.copyartifact.CopyArtifactPermissionProperty plugin="copyartifact@1.39.1">
      <projectNameList>
        <string>*</string>
      </projectNameList>
    </hudson.plugins.copyartifact.CopyArtifactPermissionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.6.4">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://rdsw@10.20.30.20/volume1/internal_git/meta-boot2qt.git</url>
        <credentialsId>bd96efab-dc86-4bd8-9e2f-f3ba1be2f1c9</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/sumo-tn-boot2qt-5.12.5-wip</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CloneOption>
        <shallow>true</shallow>
        <noTags>false</noTags>
        <reference></reference>
        <timeout>30</timeout>
        <depth>1</depth>
        <honorRefspec>false</honorRefspec>
      </hudson.plugins.git.extensions.impl.CloneOption>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>sources/meta-boot2qt</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <assignedNode>docker-slave/yocto-builder</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x -e

sed -e &quot;s,https://github.com/TechNexion,ssh://rdsw@10.20.30.20/volume1/internal_git/edm/,g&quot; -i sources/meta-boot2qt/scripts/manifest.xml
#sed -e &quot;s,74591804b9952e708ce40624a008c22d53b57b68,sumo_4.14.98-2.0.0_GA-wip,g&quot; -i sources/meta-boot2qt/scripts/manifest.xml
sed -e &quot;s,3388de490387d82e2a87c95fe3bee245fe274d0c,sumo_4.14.98-2.0.0_GA-yocto-wip,g&quot; -i sources/meta-boot2qt/scripts/manifest.xml
cat sources/meta-boot2qt/scripts/manifest.xml</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x -e

cat &gt; site.conf &lt;&lt;EOF
# u-boot-edm.bb
SRCSERVER_pn-u-boot-edm = &quot;git://10.20.30.20/volume1/internal_git/edm/uboot-imx-edm.git&quot;
SRCBRANCH_pn-u-boot-edm = &quot;tn-imx_v2018.03_4.14.98_2.0.0_ga-wip&quot;
SRCOPTIONS_pn-u-boot-edm = &quot;;protocol=ssh;user=rdsw&quot;
SRCREV_pn-u-boot-edm = &quot;\${AUTOREV}&quot;
SRC_URI_pn-u-boot-edm = &quot;\${SRCSERVER};branch=\${SRCBRANCH}\${SRCOPTIONS}&quot;

# u-boot-script.bb
#SRCSERVER_pn-u-boot-script = &quot;git://10.20.30.20/volume1/internal_git/edm/uboot-imx-edm.git&quot;
#SRCOPTIONS_pn-u-boot-script = &quot;;protocol=ssh;user=rdsw&quot;

# linux-firmware-brcm-tn.bb
SRCSERVER_pn-linux-firmware-brcm-tn = &quot;git://10.20.30.20/volume1/internal_git/edm/brcm_firmware.git&quot;
SRCBRANCH_pn-linux-firmware-brcm-tn = &quot;master&quot;
SRCOPTIONS_pn-linux-firmware-brcm-tn = &quot;;protocol=ssh;user=rdsw&quot;
SRCREV_pn-linux-firmware-brcm-tn = &quot;\${AUTOREV}&quot;
SRC_URI_pn-linux-firmware-brcm-tn = &quot;\${SRCSERVER};branch=\${SRCBRANCH}\${SRCOPTIONS}&quot;
S_pn-linux-firmware-brcm-tn = &quot;\${WORKDIR}/git&quot;

# linux-firmware-qca-tn.bb
SRCSERVER_pn-linux-firmware-qca-tn = &quot;git://10.20.30.20/volume1/internal_git/edm/qca_firmware.git&quot;
SRCBRANCH_pn-linux-firmware-qca-tn = &quot;caf-wlan/CNSS.LEA.NRT_3.0&quot;
SRCOPTIONS_pn-linux-firmware-qca-tn = &quot;;protocol=ssh;user=rdsw&quot;
SRCREV_pn-linux-firmware-qca-tn = &quot;\${AUTOREV}&quot;
SRC_URI_pn-linux-firmware-qca-tn = &quot;\${SRCSERVER};branch=\${SRCBRANCH}\${SRCOPTIONS}&quot;
S_pn-linux-firmware-qca-tn = &quot;\${WORKDIR}/git&quot;

# linux-tn-imx.bb
#KERNEL_SRC_pn-linux-tn-imx = &quot;git://10.88.88.8/volume1/internal_git/edm/tn-kernel.git&quot;
#SRCBRANCH_pn-linux-tn-imx = &quot;tn-imx_4.14.98_2.0.0_ga-wip&quot;
#SRCOPTIONS_pn-linux-tn-imx = &quot;;protocol=ssh;user=rdsw&quot;
#SRCREV_pn-linux-tn-imx = &quot;\${AUTOREV}&quot;
#SRC_URI_pn-linux-tn-imx = &quot;\${KERNEL_SRC};branch=\${SRCBRANCH}\${SRCOPTIONS}&quot;

# afloader.bb
TECHNEXION_GITHUB_MIRROR_pn-afloader = &quot;git://10.20.30.20/volume1/internal_git/fpga/afloader.git&quot;
SRCOPTIONS_pn-afloader = &quot;;protocol=ssh;user=rdsw&quot;
SRC_URI_pn-afloader = &quot;\${TECHNEXION_GITHUB_MIRROR};branch=\${SRCBRANCH}\${SRCOPTIONS}&quot;

# axonfabric-firmware.bb
TECHNEXION_GITHUB_MIRROR_pn-axonfabric-firmware = &quot;git://10.20.30.20/volume1/internal_git/fpga/axonfabric-firmware.git&quot;
SRCOPTIONS_pn-axonfabric-firmware = &quot;;protocol=ssh;user=rdsw&quot;
SRC_URI_pn-axonfabric-firmware = &quot;\${TECHNEXION_GITHUB_MIRROR};branch=\${SRCBRANCH}\${SRCOPTIONS}&quot;

EOF


</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x -e

OUTDIR=/home/jenkins/build/boot2qt-images
CACHEDIR=/home/jenkins/data/src/boot2qt/cache
DLDIR=/home/jenkins/data/src/boot2qt/downloads
SSTATEDIR=/home/jenkins/data/src/boot2qt/sstate-cache

# clear and make download/sstate-cache/ccache folder on external volume
[ -L cache ] &amp;&amp; rm -f cache
[ -d ${CACHEDIR} ] &amp;&amp; ln -s ${CACHEDIR} cache
[ -L downloads ] &amp;&amp; rm -f downloads
[ -d ${DLDIR} ] &amp;&amp; ln -s ${DLDIR} downloads
[ -L sstate-cache ] &amp;&amp; rm -f sstate-cache
[ -d ${SSTATEDIR} ] &amp;&amp; ln -s ${SSTATEDIR} sstate-cache
[ -d ${WORKSPACE}/sources/meta-edm-bsp-release ] &amp;&amp; rm -fR ${WORKSPACE}/sources/meta-edm-bsp-release

GITSERVER=&quot;10.20.30.20&quot;
GITMIRROR=&quot;10.88.88.8&quot;
chmod 0600 ~/.ssh/id_rsa
ssh-keyscan ${GITSERVER} &gt;&gt; ~/.ssh/known_hosts
ssh-keyscan ${GITMIRROR} &gt;&gt; ~/.ssh/known_hosts

CONFs=(&quot;pico-imx8mq&quot;) # &quot;pico-imx8mm&quot; &quot;pico-imx7&quot; &quot;pico-imx6&quot; &quot;flex-imx8mm&quot; &quot;edm-imx8mq&quot; &quot;edm-imx7&quot; &quot;edm-imx6&quot;)

# setup environment variables for building
# BASEBOARDs=(&quot;pi&quot; &quot;nymph&quot; &quot;dwarf&quot; &quot;hobbit&quot;)
# DISPLAYs=(&quot;lvds7&quot; &quot;hdmi720p&quot; &quot;hdmi1080p&quot; &quot;lcd&quot; &quot;lvds7_hdmi720p&quot;)
# WLANs=(&quot;qca&quot; &quot;brcm&quot; &quot;ath-pci&quot;)
setup_env_vars () {
  case $1 in
    pico-imx8mq)
      board=&quot;pi&quot;
      disp=&quot;mipi5&quot;
      wlan=&quot;qca&quot;
      panel=&quot;ili9881c&quot;
      ;;
    pico-imx8mm)
      board=&quot;pi&quot;
      disp=&quot;mipi5&quot;
      wlan=&quot;qca&quot;
      panel=&quot;ili9881c&quot;
      ;;
    edm-imx8mq)
      board=&quot;wizard&quot;
      disp=&quot;mipi5&quot;
      wlan=&quot;qca&quot;
      panel=&quot;ili9881c&quot;
      ;;
    flex-imx8mm)
      board=&quot;pi&quot;
      disp=&quot;mipi5&quot;
      wlan=&quot;qca&quot;
      panel=&quot;ili9881c&quot;
      ;;
    axon-imx8mm)
      board=&quot;pi&quot;
      disp=&quot;mipi5&quot;
      wlan=&quot;qca&quot;
      panel=&quot;ili9881c&quot;
      ;;
    pico-imx6)
      board=&quot;pi&quot;
      disp=&quot;lcd&quot;
      wlan=&quot;qca&quot;
      panel=&quot;&quot;
      ;;
    pico-imx7)
      board=&quot;pi&quot;
      disp=&quot;lcd&quot;
      wlan=&quot;qca&quot;
      panel=&quot;&quot;
      ;;
    pico-imx6ul)
      board=&quot;pi&quot;
      disp=&quot;lcd&quot;
      wlan=&quot;qca&quot;
      panel=&quot;&quot;
      ;;
    edm-imx6)
      board=&quot;fairy&quot;
      disp=&quot;lvds7&quot;
      wlan=&quot;qca&quot;
      panel=&quot;&quot;
      ;;
    axon-imx6)
      board=&quot;pi&quot;
      disp=&quot;lcd&quot;
      wlan=&quot;qca&quot;
      panel=&quot;&quot;
      ;;
    edm-imx7)
      board=&quot;gnome&quot;
      disp=&quot;lcd&quot;
      wlan=&quot;qca&quot;
      panel=&quot;&quot;
      ;;
    tep1-imx7)
      board=&quot;gnome&quot;
      disp=&quot;lcd&quot;
      wlan=&quot;ath-pci&quot;
      panel=&quot;&quot;
      ;;
    tep1-imx6ul)
      board=&quot;gnome&quot;
      disp=&quot;lcd&quot;
      wlan=&quot;ath-pci&quot;
      panel=&quot;&quot;
      ;;
    tek-imx6)
      board=&quot;tek&quot;
      disp=&quot;lvds10&quot;
      wlan=&quot;ath-pci&quot;
      panel=&quot;&quot;
      ;;
    tek3-imx6ul)
      board=&quot;tek&quot;
      disp=&quot;lvds10&quot;
      wlan=&quot;ath-pci&quot;
      panel=&quot;&quot;
      ;;
  	*)
      ;;
  esac
}

for conf in ${CONFs[*]}; do
  cd ${WORKSPACE}

  ./sources/meta-boot2qt/b2qt-init-build-env init --device $conf

  export MACHINE=$conf
  source setup-environment.sh
  
  setup_env_vars $conf

  # Export uEnv.txt variables
  export BASE_BOARD=$board
  export DISPLAY_INFO=$disp
  export RF_FIRMWARES=$wlan
  export DISPLAY_PANEL=$panel
  export BB_ENV_EXTRAWHITE=&quot;$BB_ENV_EXTRAWHITE BASE_BOARD DISPLAY_INFO RF_FIRMWARES DISPLAY_PANEL&quot;
  export

  # Copy the site.conf for overriding QCA firmware downloads
  cp ${WORKSPACE}/site.conf ./conf/site.conf
  cat ./conf/site.conf

  bitbake u-boot-edm -c cleanall
  bitbake linux-tn-imx -c cleanall
  bitbake meta-b2qt-embedded-qbsp -c cleanall
  bitbake meta-b2qt-embedded-qbsp

done</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build-*/tmp/deploy/images/*/*,build-*/tmp/deploy/sdk/*,build-*/tmp/deploy/qbsp/*</artifacts>
      <allowEmptyArchive>true</allowEmptyArchive>
      <onlyIfSuccessful>true</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.20">
      <recipients>Po Cheng &lt;po.cheng@technexion.com&gt;</recipients>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>