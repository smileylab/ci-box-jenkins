<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>build rescue diskimage from DCD files, u-boot.bin, kernel, and rootfs.cpio.xz</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>5</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.copyartifact.CopyArtifactPermissionProperty plugin="copyartifact@1.39.1">
      <projectNameList>
        <string>*</string>
      </projectNameList>
    </hudson.plugins.copyartifact.CopyArtifactPermissionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>docker-slave/ubuntu</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>rescue-uboot-4.1.15,rescue-buildroot-install-modules32-4.1.15</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.39.1">
      <project>rescue-buildroot-install-modules32-4.1.15</project>
      <filter>rescue32/images/rootfs.cpio.xz</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>true</stable>
      </selector>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.39.1">
      <project>github_tn-kernel-4.1.15</project>
      <filter>arch/arm/boot/zImage,arch/arm/boot/dts/*pico*.dtb,arch/arm/boot/dts/*edm*.dtb,arch/arm/boot/dts/*tek*.dtb,arch/arm/boot/dts/*tep*.dtb,</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>true</stable>
      </selector>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.39.1">
      <project>rescue-uboot-4.1.15</project>
      <filter>BUILD-**/u-boot.bin,BUILD-**/board/technexion/**/*.cfgtmp,board/technexion/**/tnrescue.its,</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>true</stable>
      </selector>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x

set -e

IMGDIR=/home/jenkins/build/rescue-imximages
FORMS=(&quot;pico&quot; &quot;edm&quot;)
BASES=(&quot;dwarf&quot; &quot;nymph&quot; &quot;hobbit&quot; &quot;pi&quot; &quot;fairy&quot; &quot;tc1000&quot;)
CONFIGS=(&quot;pico-imx6s&quot; &quot;pico-imx6dl&quot; &quot;pico-imx6q&quot; &quot;pico-imx7d&quot; &quot;pico-imx6ul&quot;)

get_board_dir() {
  case $1 in
    *pico-imx6ul*)
      BRD=&quot;pico-imx6ul&quot;
      ;;
    *pico-imx6*)
      BRD=&quot;pico-imx6&quot;
      ;;
    *pico-imx7d*)
      BRD=&quot;pico-imx7d&quot;
      ;;
    *pico-imx8m*)
      BRD=&quot;pico-8m&quot;
      ;;
    *edm-cf-imx6*)
      BRD=&quot;edm-cf-imx6&quot;
      ;;
    *edm1-cf-imx6*)
      BRD=&quot;edm1-cf-imx6sx&quot;
      ;;
    *edm1-imx6ul*)
      BRD=&quot;edm1-imx6ul-nand&quot;
      ;;
    *edm1-imx7d*)
      BRD=&quot;edm1-imx7d&quot;
      ;;
    *tek3-imx6ul*)
      BRD=&quot;tek3-imx6ul&quot;
      ;;
    *tek-imx6*)
      BRD=&quot;tek-imx6&quot;
      ;;
    *tep1-imx6ul*)
      BRD=&quot;tep1-imx6ul&quot;
      ;;
    *tep1-imx7d*)
      BRD=&quot;tep1-imx7d&quot;
      ;;
    *)
      BRD=$1
      ;;
  esac
}

set_entry_address() {
  case $1 in
    *imx6ul*)
      ENTRYADDR=0x87800000
      ;;
    *imx6*)
      ENTRYADDR=0x17800000
      ;;
    *imx7d*)
      ENTRYADDR=0x87800000
      ;;
  esac
}

# clear and make output directory
[ -d $IMGDIR ] &amp;&amp; rm -rf ${IMGDIR}/*.imx || mkdir -p $IMGDIR

# build tnrescue imximages for each CONF
for CONF in ${CONFIGS[@]}; do
  # make the fit folder for generating FIT image
  mkdir -p ./fit/dtb
  # copy back the root file system image
  cp rescue32/images/rootfs.cpio.xz ./fit
  # copy back the kernel image
  cp arch/arm/boot/zImage ./fit
  # copy back the device trees
  for FORM in ${FORMS[@]}; do
    cp arch/arm/boot/dts/*.dtb ./fit/dtb
  done
  # set the entry address
  set_entry_address $CONF
  # copy back the fit source file
  cp board/technexion/${CONF/6[d|q|s]*/6}/tnrescue.its ./fit/tnrescue.its
  # generate the fit blob (require u-boot-tools)
  mkimage -f ./fit/tnrescue.its ./fit/tnrescue.itb
  # copy the u-boot.bin file to ./fit/tnrescue.bin
  cp BUILD-${CONF}/u-boot.bin ./fit/tnrescue.bin
  # append the flat image tree blob at the end of u-boot.bin at offset 512K address (u-boot.bin &lt; 64K)
  $(cat ./fit/tnrescue.itb | dd of=./fit/tnrescue.bin bs=512K seek=1 oflag=dsync conv=notrunc)
  # generate the imximage file (require u-boot-tools)
  get_board_dir ${CONF}
  DCDFILE=$(ls BUILD-${CONF}/board/technexion/${BRD}/*.cfgtmp)
  mkimage -n $DCDFILE \
          -T imximage -e ${ENTRYADDR} -d ./fit/tnrescue.bin tn_${CONF}_rescue.imx
  # copy out the disk image
  cp tn_${CONF}_rescue.imx ${IMGDIR}
  # clean up files
  rm -rf ./fit
done
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.imx</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.20">
      <recipients>po.cheng@technexion.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>